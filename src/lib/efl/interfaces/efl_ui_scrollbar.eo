enum Efl.Ui.Scrollbar_Mode
{
   auto = 0, [[Visible if necessary]]
   on, [[Always visible]]
   off, [[Always invisible]]
   last [[For internal use only]]
}

enum Efl.Ui.Scrollbar_Direction
{
   horizontal = 0,
   vertical,
   last
}
interface @beta Efl.Ui.Scrollbar
{
   methods {
      @property bar_mode {
         [[Scrollbar visibility policy]]
         set {
         }
         get {
         }
         values {
            hbar: Efl.Ui.Scrollbar_Mode; [[Horizontal scrollbar]]
            vbar: Efl.Ui.Scrollbar_Mode; [[Vertical scrollbar]]
         }
      }
      @property bar_size {
         [[Scrollbar size.
           It is calculated based on viewport size-content sizes.
         ]]
         get {
         }
         values {
            width: double; [[Value between 0.0 and 1.0]]
            height: double; [[Value between 0.0 and 1.0]]
         }
      }
      @property bar_position {
         [[Scrollbar position.
           It is calculated based on current position-maximum positions.
         ]]
         set {
         }
         get {
         }
         values {
            posx: double; [[Value between 0.0 and 1.0]]
            posy: double; [[Value between 0.0 and 1.0]]
         }
      }
      bar_visibility_update @protected @beta{
         [[ Update bar visibility.

            The object will call this function whenever the bar
            need to be shown or hidden.
         ]]
      }
   }
   events {
      bar,press: Efl.Ui.Scrollbar_Direction; [[Called when bar is pressed]]
      bar,unpress: Efl.Ui.Scrollbar_Direction; [[Called when bar is unpressed]]
      bar,drag: Efl.Ui.Scrollbar_Direction; [[Called when bar is dragged]]
      bar,size,changed: void; [[Called when bar size is changed]]
      bar,pos,changed: void; [[Called when bar position is changed]]
      bar,show: Efl.Ui.Scrollbar_Direction; [[Callend when bar is shown]]
      bar,hide: Efl.Ui.Scrollbar_Direction; [[Called when bar is hidden]]
   }
}
